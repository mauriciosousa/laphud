<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0-preview">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns:q2="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q3="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:q4="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q5="clr-namespace:Bonsai.Osc;assembly=Bonsai.Osc" xmlns="https://bonsai-rx.org/2018/workflow">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:KeyDown">
          <q1:Filter>None</q1:Filter>
          <q1:SuppressRepetitions>false</q1:SuppressRepetitions>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Description />
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>S</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:KeyDown">
          <q1:Filter>None</q1:Filter>
          <q1:SuppressRepetitions>false</q1:SuppressRepetitions>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>D</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>vid</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="SubscribeWhen" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:VideoWriter">
          <q2:FileName>trial.avi</q2:FileName>
          <q2:Suffix>Timestamp</q2:Suffix>
          <q2:Buffered>true</q2:Buffered>
          <q2:Overwrite>false</q2:Overwrite>
          <q2:FourCC>FMP4</q2:FourCC>
          <q2:FrameRate>30</q2:FrameRate>
          <q2:FrameSize>
            <q2:Width>0</q2:Width>
            <q2:Height>0</q2:Height>
          </q2:FrameSize>
          <q2:ResizeInterpolation>NearestNeighbor</q2:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Timestamp</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Take">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item1.Timestamp.TimeOfDay.TotalMilliseconds,Item2.TimeOfDay.TotalMilliseconds</Selector>
      </Expression>
      <Expression xsi:type="Subtract" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item1.Item1.Value,Item2</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="TakeUntil" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item1</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:ConvertColor">
          <q2:Conversion>Bgr2Hsv</q2:Conversion>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:HsvThreshold">
          <q2:Lower>
            <q2:Val0>168</q2:Val0>
            <q2:Val1>75</q2:Val1>
            <q2:Val2>48</q2:Val2>
            <q2:Val3>0</q2:Val3>
          </q2:Lower>
          <q2:Upper>
            <q2:Val0>2</q2:Val0>
            <q2:Val1>255</q2:Val1>
            <q2:Val2>255</q2:Val2>
            <q2:Val3>255</q2:Val3>
          </q2:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:FindContours">
          <q2:Mode>External</q2:Mode>
          <q2:Method>ChainApproxNone</q2:Method>
          <q2:Offset>
            <q2:X>0</q2:X>
            <q2:Y>0</q2:Y>
          </q2:Offset>
          <q2:MinArea>200</q2:MinArea>
          <q2:MaxArea xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:HsvThreshold">
          <q2:Lower>
            <q2:Val0>78</q2:Val0>
            <q2:Val1>158</q2:Val1>
            <q2:Val2>124</q2:Val2>
            <q2:Val3>0</q2:Val3>
          </q2:Lower>
          <q2:Upper>
            <q2:Val0>138</q2:Val0>
            <q2:Val1>255</q2:Val1>
            <q2:Val2>255</q2:Val2>
            <q2:Val3>0</q2:Val3>
          </q2:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:FindContours">
          <q2:Mode>External</q2:Mode>
          <q2:Method>ChainApproxNone</q2:Method>
          <q2:Offset>
            <q2:X>0</q2:X>
            <q2:Y>0</q2:Y>
          </q2:Offset>
          <q2:MinArea>200</q2:MinArea>
          <q2:MaxArea xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Sink">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1.Centroid,Item1.Area,Item2.Centroid,Item2.Area,Item3.Item2</Selector>
            </Expression>
            <Expression xsi:type="q3:CsvWriter">
              <q3:FileName>trialData.csv</q3:FileName>
              <q3:Append>false</q3:Append>
              <q3:Overwrite>false</q3:Overwrite>
              <q3:Suffix>Timestamp</q3:Suffix>
              <q3:IncludeHeader>false</q3:IncludeHeader>
              <q3:CompatibilityMode>true</q3:CompatibilityMode>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item1,Item2,Item3.Item1</Selector>
      </Expression>
      <Expression xsi:type="q4:PythonTransform">
        <q4:Name>DrawCentroid</q4:Name>
        <q4:Description>A Python script used to overlay the tracking results on top of the camera image.</q4:Description>
        <q4:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *

@returns(IplImage)
def process(value):
  red = value.Item1
  green = value.Item2
  image = value.Item3

  output = image.Clone()

  if red.Area &gt; 0:
    CV.Circle(output, Point(red.Centroid), 10, Scalar.Rgb(255, 0, 0), -1)

  if green.Area &gt; 0:
    CV.Circle(output, Point(green.Centroid), 10, Scalar.Rgb(0, 255, 0), -1)

  return output</q4:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:CameraCapture">
          <q2:Index>0</q2:Index>
          <q2:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="PublishSubject">
        <Name>vid</Name>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="q5:ReceiveMessage">
          <q5:Address>/</q5:Address>
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="5" Label="Source2" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="15" Label="Source2" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="10" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source2" />
      <Edge From="10" To="13" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="12" To="13" Label="Source2" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="26" Label="Source3" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="17" To="22" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="26" Label="Source1" />
      <Edge From="22" To="23" Label="Source1" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="25" To="26" Label="Source2" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="31" To="32" Label="Source1" />
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.SinkBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.SubtractBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Windows.Forms.Keys, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Osc.ReceiveMessage, Bonsai.Osc, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Repeat, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.SubscribeWhen, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.TakeUntil, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.CameraCapture, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.ConvertColor, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.HsvThreshold, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>